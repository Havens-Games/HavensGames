package net.whg.havensgames.spawn.misc;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.FoodLevelChangeEvent;

/**
 * Prevents players from being damaged while at spawn.
 */
public class SpawnInvulnerabilityListener implements Listener {
    private static final String HUB_WORLD_NAME = "world";
    private static final int SPAWN_RADIUS_SQUARED = 500 * 500;

    private final Location hubLocation;

    /**
     * Creates a new SpawnInvulnerabilityListener instance and pulls an internal
     * reference to the location of the hub center for testing against.
     */
    public SpawnInvulnerabilityListener() {
        var world = Bukkit.getWorld(HUB_WORLD_NAME);
        hubLocation = new Location(world, 0, 64, 0);
    }

    /**
     * Listens for entity damage events and then cancels the event if the entity is
     * a player who is at spawn.
     * 
     * @param e - The event.
     */
    @EventHandler
    public void onPlayerDamage(EntityDamageEvent e) {
        var entity = e.getEntity();
        if (!(entity instanceof Player))
            return;

        var player = (Player) entity;
        if (isAtSpawn(player))
            e.setCancelled(true);
    }

    /**
     * Listens for when an entity's food level changes and then cancels the event if
     * the entity is a player who is at spawn.
     * 
     * @param e - The event.
     */
    @EventHandler
    public void onFoodLevelChange(FoodLevelChangeEvent e) {
        var entity = e.getEntity();
        if (!(entity instanceof Player))
            return;

        var player = (Player) entity;
        if (isAtSpawn(player))
            e.setCancelled(true);
    }

    /**
     * Checks if the player is currently at spawn.
     * 
     * @param player - The player.
     * @return True if the player is at spawn. False otherwise.
     */
    private boolean isAtSpawn(Player player) {
        if (player.getWorld() != hubLocation.getWorld())
            return false;

        return player.getLocation().distanceSquared(hubLocation) < SPAWN_RADIUS_SQUARED;
    }
}
